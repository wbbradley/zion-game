module _

get SDL {SDL_Init, SDL_INIT_VIDEO}

var SCREEN_WIDTH  int = 640
var SCREEN_HEIGHT int = 480

fn main() int {
    if SDL_Init(SDL_INIT_VIDEO) != 0 {
        print("SDL_Init Error: " + SDL_GetError())
        return 1
    }
    defer fn () { SDL_Quit() }

    win := SDL_CreateWindow("Hello World!", 100, 100, 640, 480, SDL_WINDOW_SHOWN)
    if win == null {
        print("SDL_CreateWindow Error: " + SDL_GetError())
        return 1
    }
    defer fn () { SDL_DestroyWindow(win) }

    ren := SDL_CreateRenderer(win, -1, SDL_RENDERER_ACCELERATED | SDL_RENDERER_PRESENTVSYNC)

    if ren == nullptr {
        print("SDL_CreateRenderer Error: " + SDL_GetError())
        return 1
    }
    defer fn () { SDL_DestroyRenderer(ren) }

    image_path := "hello.bmp"
    bmp := SDL_LoadBMP(image_path)

    if bmp == null {
        print("SDL_LoadBMP Error: " + SDL_GetError())
        return 1
    }

    tex := SDL_CreateTextureFromSurface(ren, bmp)
    defer fn () { SDL_DestroyTexture(tex) }
    SDL_FreeSurface(bmp)

    if tex == null {
        print("SDL_CreateTextureFromSurface Error: " + SDL_GetError())
        return 1;
    }

    # A sleepy rendering loop, wait for 3 seconds and render and present the screen each time
    for i in range(3) {
        # First clear the renderer
        SDL_RenderClear(ren);
        # Draw the texture
        SDL_RenderCopy(ren, tex, null, null)
        # Update the screen
        SDL_RenderPresent(ren)
        # Take a quick break after all that hard work
        SDL_Delay(1000)
    }

    return 0
}
